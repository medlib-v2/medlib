language: php

php:
  - 5.6
  - 7.0
  - 7.1

env:
  global:
    - setup=basic

matrix:
  include:
    - php: 5.6
      env: setup=lowest
    - php: 5.6
      env: setup=stable

## Cache composer directories
cache:
  directories:
    - $HOME/.composer/cache
    - node_modules # NPM packages
    - vendor

branches:
  - master
  - develop


notifications:
  email:
    on_success: never
    on_failure: always

#Start MySQL
sudo: required
services:
  - mysql
  - redis-server

# Setting up pre-requirements
before_install:
  - export CHROME_BIN=chromium-browser
  - export DISPLAY=:99.0
  - sh -e /etc/init.d/xvfb start
  - git clone git://github.com/medlib-v2/test-unit.git tests
  - cp .env.travis .env
  - rm -rf .env.testing
  - touch database/database.sqlite
  - mysql -e 'create database if not exists medlib_test;'
  - if [[ $TRAVIS_PHP_VERSION != 7.1 ]] ; then phpenv config-rm xdebug.ini; fi
  - echo "extension = memcached.so" >> ~/.phpenv/versions/$(phpenv version-name)/etc/php.ini
  - sudo apt-get install yaz libyaz4 libyaz4-dev
  - printf "\n" | pecl install yaz
  - npm i maildev
  - travis_retry composer self-update
  - travis_retry node_modules/maildev/bin/maildev 1>&2>/dev/null

install:
  - . $HOME/.nvm/nvm.sh
  - nvm install stable
  - nvm use stable
  - if [[ $setup = 'basic' ]]; then travis_retry composer install --no-ansi --no-dev --no-scripts --prefer-dist --no-interaction --prefer-dist --no-suggest; fi
  - if [[ $setup = 'stable' ]]; then travis_retry composer update --no-ansi --no-dev --no-scripts --prefer-dist --no-interaction --prefer-stable --no-suggest; fi
  - if [[ $setup = 'lowest' ]]; then travis_retry composer update --no-ansi --no-dev --no-scripts --prefer-dist --no-interaction --prefer-lowest --prefer-stable --no-suggest; fi
  - php artisan key:generate
  - php artisan migrate --seed --env="testing"
  - make file-permission
  - sleep 5
  - npm install
  - node server.js 1>&2>/dev/null

script:
  - make cs
  - make test

matrix:
  allow_failures:
    - php: 7.1
  fast_finish: true

after_success:
  - npm run report-coverage